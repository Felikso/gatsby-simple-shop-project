{"version":3,"sources":["webpack://gatsby-simply-shop-project/./node_modules/@material-ui/core/colors/deepOrange.js","webpack://gatsby-simply-shop-project/./node_modules/@material-ui/core/colors/green.js","webpack://gatsby-simply-shop-project/./node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js","webpack://gatsby-simply-shop-project/./src/containers/Layout/index.js"],"names":["exports","_default","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","props","children","localTheme","theme","outerTheme","output","mergeOuterLocalTheme","value","MenuTabs","loadable","useStyles","makeStyles","layoutContainer","overflow","breakpoints","up","paddingLeft","createMuiTheme","palette","primary","main","green","secondary","deepOrange","Layout","classes","store","style","margin","className"],"mappings":"mHAKAA,EAAQ,OAAU,EAClB,IAgBIC,EAhBa,CACfC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAGRf,EAAQ,EAAUC,G,gCClBlBD,EAAQ,OAAU,EAClB,IAgBIC,EAhBQ,CACVC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAGRf,EAAQ,EAAUC,G,uFCqClB,IA/BA,SAAuBe,GACrB,IAAIC,EAAWD,EAAMC,SACjBC,EAAaF,EAAMG,MACnBC,GAAa,SAQbD,EAAQ,WAAc,WACxB,IAAIE,EAAwB,OAAfD,EAAsBF,EAlCvC,SAA8BE,EAAYF,GACxC,MAA0B,mBAAfA,EACSA,EAAWE,IAWxB,OAAS,GAAIA,EAAYF,GAqBkBI,CAAqBF,EAAYF,GAMjF,OAJc,MAAVG,IACFA,EAAO,KAAyB,OAAfD,GAGZC,IACN,CAACH,EAAYE,IAChB,OAAoB,gBAAoB,aAAuB,CAC7DG,MAAOJ,GACNF,K,4KCvBCO,GAAWC,QAAS,CAAD,2JAAC,kBAAM,wEAAP,qPAQnBC,GAAYC,QAAW,SAACR,GAAD,YAAY,CACvCS,iBAAe,GACbC,SAAU,UADG,EAEZV,EAAMW,YAAYC,GAAG,OAAQ,CAC5BC,YAAa,IAHF,OAUVb,GAAQc,OAAe,CAC3BC,QAAS,CAIPC,QAAS,CACPC,KAAMC,UAERC,UAAW,CACTF,KAAMG,aAKNC,EAAS,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SACXwB,EAAUf,IAGf,OACE,gBAAC,IAAD,CAAeP,MAAOA,GACV,gBAAC,KAAD,CAAUuB,MAAOA,KACtB,gBAAC,KAAD,KAEA,gBAAClB,EAAD,MACL,uBACEmB,MAAO,CACLC,OAAO,gBAFX,KAKG,gBAAC,UAAD,KACD,gBAAC,IAAD,CAAMC,UAAWJ,EAAQb,iBAAiB,4BAAOX,UAezD,a","file":"containers-Layout-3be29bea1ed3d1e5f1b5.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nvar _default = deepOrange;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar green = {\n  50: '#e8f5e9',\n  100: '#c8e6c9',\n  200: '#a5d6a7',\n  300: '#81c784',\n  400: '#66bb6a',\n  500: '#4caf50',\n  600: '#43a047',\n  700: '#388e3c',\n  800: '#2e7d32',\n  900: '#1b5e20',\n  A100: '#b9f6ca',\n  A200: '#69f0ae',\n  A400: '#00e676',\n  A700: '#00c853'\n};\nvar _default = green;\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { exactProp } from '@material-ui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested'; // To support composition of theme.\n\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    var mergedTheme = localTheme(outerTheme);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['Material-UI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n\n    return mergedTheme;\n  }\n\n  return _extends({}, outerTheme, localTheme);\n}\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\n\n\nfunction ThemeProvider(props) {\n  var children = props.children,\n      localTheme = props.theme;\n  var outerTheme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['Material-UI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  var theme = React.useMemo(function () {\n    var output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? void 0 : void 0;\n}\n\nexport default ThemeProvider;"," import React, { Suspense } from \"react\"\r\n\r\n //page loader\r\n import PageLoader from '../../loaders/PageLoader'\r\n\r\n//lazy load\r\nimport loadable from '@loadable/component'\r\n\r\n import PropTypes from \"prop-types\"\r\n\r\n\r\n //Products providers\r\nimport { Provider } from \"react-redux\"\r\nimport { ProductProvider }  from \"../../shoppingApp/context/context\"\r\nimport store from \"../../shoppingApp/redux/store\"\r\n \r\n //Material UI\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport deepOrange from '@material-ui/core/colors/deepOrange';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n//Page transitions\r\nimport PageTransition from 'gatsby-plugin-page-transitions';\r\n\r\n\r\n//Components\r\nconst MenuTabs = loadable(() => import('../../components/MenuTabs'))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  layoutContainer: {\r\n    overflow: 'hidden',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingLeft: 74,\r\n    },\r\n  },\r\n\r\n}));\r\n\r\n \r\n const theme = createMuiTheme({\r\n   palette: {\r\n \r\n /*       type: 'dark', */\r\n     \r\n     primary: {\r\n       main: green[800],\r\n     },\r\n     secondary: {\r\n       main: deepOrange[800],\r\n     },\r\n   },\r\n });\r\n \r\n const Layout = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n \r\n   return (\r\n     <ThemeProvider theme={theme}>\r\n                 <Provider store={store}>\r\n            <ProductProvider>\r\n{/*           <PageLoader /> */}\r\n            <MenuTabs />\r\n       <div\r\n         style={{\r\n           margin: `64px auto 0`,\r\n \r\n         }}\r\n       >  <PageTransition>\r\n         <Grid className={classes.layoutContainer}><main>{children}</main></Grid>\r\n         </PageTransition>\r\n \r\n       </div>\r\n\r\n     </ProductProvider>\r\n     </Provider>\r\n     </ThemeProvider>\r\n   )\r\n }\r\n \r\n Layout.propTypes = {\r\n   children: PropTypes.node.isRequired,\r\n }\r\n \r\n export default Layout\r\n "],"sourceRoot":""}