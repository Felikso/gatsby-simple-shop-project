{"version":3,"sources":["webpack://gatsby-simply-shop-project/./src/containers/ContactForm/Controls/Textfield/index.js","webpack://gatsby-simply-shop-project/./src/containers/ContactForm/Controls/Select/index.js","webpack://gatsby-simply-shop-project/./src/containers/ContactForm/Controls/DataTimePicker/index.js","webpack://gatsby-simply-shop-project/./src/containers/ContactForm/Controls/Checkbox/index.js","webpack://gatsby-simply-shop-project/./src/containers/ContactForm/Controls/Button/index.js","webpack://gatsby-simply-shop-project/./src/containers/ContactForm/index.js"],"names":["name","otherProps","useField","field","mata","configTextfield","fullWidth","variant","touched","error","helperText","options","setFieldValue","useFormikContext","meta","configSelect","select","onChange","evt","value","target","Object","keys","map","item","pos","key","configDateTimePicker","type","InputLabelProps","shrink","label","legend","configCheckbox","checked","configFormControl","component","control","children","submitForm","configButton","color","onClick","useStyles","makeStyles","theme","formWrapper","marginTop","spacing","marginBottom","INITIAL_FORM_STATE","firstName","lastName","email","phone","addressLine1","addressLine2","city","state","country","arrivealDate","departureDate","message","termsOfService","FORM_VALIDATION","Yup","shape","typeError","required","integer","oneOf","classes","container","xs","maxWidth","className","initialValues","validationSchema","onSubmit","values","console","log","content","sm","Textfield","Select","countries","multiline","rows"],"mappings":"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","file":"containers-ContactForm-6dcb3fdcd77527773362.js","sourcesContent":["import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { useField } from 'formik';\r\n\r\nconst TextfieldWrapper = ({\r\n  name,\r\n  ...otherProps\r\n}) => {\r\n  const [field, mata] = useField(name);\r\n\r\n  const configTextfield = {\r\n    ...field,\r\n    ...otherProps,\r\n    fullWidth: true,\r\n    variant: 'outlined'\r\n  };\r\n\r\n  if (mata && mata.touched && mata.error) {\r\n    configTextfield.error = true;\r\n    configTextfield.helperText = mata.error;\r\n  }\r\n\r\n  return (\r\n    <TextField {...configTextfield} />\r\n  );\r\n};\r\n\r\nexport default TextfieldWrapper;","import React from 'react';\r\nimport { TextField, MenuItem } from '@material-ui/core';\r\nimport { useField, useFormikContext } from 'formik';\r\n\r\nconst SelectWrapper = ({\r\n  name,\r\n  options,\r\n  ...otherProps\r\n}) => {\r\n  const { setFieldValue } = useFormikContext();\r\n  const [field, meta] = useField(name);\r\n\r\n  const handleChange = evt => {\r\n    const { value } = evt.target;\r\n    setFieldValue(name, value);\r\n  };\r\n\r\n  const configSelect = {\r\n    ...field,\r\n    ...otherProps,\r\n    select: true,\r\n    variant: 'outlined',\r\n    fullWidth: true,\r\n    onChange: handleChange\r\n  };\r\n\r\n  if (meta && meta.touched && meta.error) {\r\n    configSelect.error = true;\r\n    configSelect.helperText = meta.error;\r\n  }\r\n\r\n  return (\r\n    <TextField {...configSelect}>\r\n      {Object.keys(options).map((item, pos) => {\r\n        return (\r\n          <MenuItem key={pos} value={item}>\r\n            {options[item]}\r\n          </MenuItem>\r\n        )\r\n      })}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport default SelectWrapper;","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { useField } from 'formik';\r\n\r\nconst DateTimePicker = ({\r\n  name,\r\n  ...otherProps\r\n}) => {\r\n  const [field, meta] = useField(name);\r\n\r\n  const configDateTimePicker = {\r\n    ...field,\r\n    ...otherProps,\r\n    type: 'date',\r\n    variant: 'outlined',\r\n    fullWidth: true,\r\n    InputLabelProps: {\r\n      shrink: true\r\n    }\r\n  };\r\n\r\n  if(meta && meta.touched && meta.error) {\r\n    configDateTimePicker.error = true;\r\n    configDateTimePicker.helperText = meta.error;\r\n  }\r\n\r\n  return (\r\n    <TextField\r\n      {...configDateTimePicker}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateTimePicker;","import React from 'react';\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel\r\n} from '@material-ui/core';\r\nimport { useField, useFormikContext } from 'formik';\r\n\r\nconst CheckboxWrapper = ({\r\n  name,\r\n  label,\r\n  legend,\r\n  ...otherProps\r\n}) => {\r\n  const { setFieldValue } = useFormikContext();\r\n  const [field, meta] = useField(name);\r\n\r\n  const handleChange = evt => {\r\n    const { checked } = evt.target;\r\n    setFieldValue(name, checked);\r\n  };\r\n\r\n  const configCheckbox = {\r\n    ...field,\r\n    onChange: handleChange\r\n  };\r\n\r\n  const configFormControl = {};\r\n  if (meta && meta.touched && meta.error) {\r\n    configFormControl.error = true;\r\n  }\r\n\r\n  return (\r\n    <FormControl {...configFormControl}>\r\n      <FormLabel component=\"legend\">{legend}</FormLabel>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Checkbox {...configCheckbox} />}\r\n          label={label}\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CheckboxWrapper;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { useFormikContext } from 'formik';\r\n\r\nconst ButtonWrapper = ({\r\n  children,\r\n  ...otherProps\r\n}) => {\r\n  const { submitForm } = useFormikContext();\r\n\r\n  const handleSubmit = () => {\r\n    submitForm();\r\n  }\r\n\r\n  const configButton = {\r\n    variant: 'contained',\r\n    color: 'primary',\r\n    fullWidth: true,\r\n    onClick: handleSubmit\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      {...configButton}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonWrapper;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\n//Use form effects\r\nimport { useForm } from './Functions/UseForm';\r\n\r\n//Components\r\nimport Textfield from './Controls/Textfield';\r\nimport Select from './Controls/Select';\r\nimport DateTimePicker from './Controls/DataTimePicker';\r\nimport Checkbox from './Controls/Checkbox';\r\nimport Button from './Controls/Button';\r\nimport countries from './data/countries.json';\r\n\r\n//Lazy load\r\n\r\nimport loadable from '@loadable/component'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formWrapper: {\r\n    marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nconst INITIAL_FORM_STATE = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  phone: '',\r\n  addressLine1: '',\r\n  addressLine2: '',\r\n  city: '',\r\n  state: '',\r\n  country: '',\r\n  arrivealDate: '',\r\n  departureDate: '',\r\n  message: '',\r\n  termsOfService: false\r\n};\r\n\r\nconst FORM_VALIDATION = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .typeError('Imię powinno składać się z liter')\r\n    .required('Proszę podać imię'),\r\n  lastName: Yup.string()\r\n    .required('Proszę podać nazwisko.'),\r\n  email: Yup.string()\r\n    .email('Nieprawidłowy adres e-mail.')\r\n    .required('Proszę podać adres e-mail.'),\r\n  phone: Yup.number()\r\n    .integer()\r\n    .typeError('Proszę podać prawidłowy numer telefonu.')\r\n    .required('Proszę podać numer telefonu.'),\r\n  addressLine1: Yup.string()\r\n    .required('Proszę podać adres.'),\r\n  addressLine2: Yup.string(),\r\n  city: Yup.string()\r\n    .required('Proszę wybrać miasto docelowe dla zamówienia/usługi.'),\r\n  country: Yup.string()\r\n    .required('Proszę wybrać państwo docelowe dla zamówienia/usługi.'),\r\n  arrivealDate: Yup.date()\r\n    .required('Proszę wybrać docelowe rozpoczęcie zamówienia/usługi.'),\r\n  departureDate: Yup.date()\r\n    .required('Proszę wybrać docelowe zakończenie zamówienia/usługi.'),\r\n  message: Yup.string(),\r\n  termsOfService: Yup.boolean()\r\n    .oneOf([true], 'Proszę zaakceptować warunki regulaminu.')\r\n    .required('Warunki regulaminu muszą być zaakcetowane.'),\r\n});\r\n\r\nconst ContactForm = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Container maxWidth=\"md\">\r\n          <div className={classes.formWrapper}>\r\n\r\n            <Formik\r\n              initialValues={{\r\n                ...INITIAL_FORM_STATE\r\n              }}\r\n              validationSchema={FORM_VALIDATION}\r\n              onSubmit={values => {\r\n                console.log(values);\r\n              }}\r\n            >\r\n              <Form>\r\n\r\n                <Grid container spacing={3}>\r\n\r\n                  <Grid item xs={12}>\r\n                     <Typography variant=\"h4\" content=\"h3\">\r\n                      Formularz zamówienia\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Typography>\r\n                      Dane osobowe\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Textfield\r\n                      name=\"firstName\"\r\n                      label=\"Imię\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Textfield\r\n                      name=\"lastName\"\r\n                      label=\"Nazwisko\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Textfield\r\n                      name=\"email\"\r\n                      label=\"adres E-mail\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Textfield\r\n                      name=\"phone\"\r\n                      label=\"Numer telefonu\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Typography>\r\n                      Docelowy adres dla zamówienia/usługi\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Textfield\r\n                      name=\"addressLine1\"\r\n                      label=\"Adres linia 1\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Textfield\r\n                      name=\"addressLine2\"\r\n                      label=\"Adres linia 2\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Textfield\r\n                      name=\"city\"\r\n                      label=\"Miasto\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <Select\r\n                      name=\"country\"\r\n                      label=\"Państwo\"\r\n                      options={countries}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Typography>\r\n                      Przewidywany docelowy okres dla zamówienia/usługi\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <DateTimePicker\r\n                      name=\"arrivealDate\"\r\n                      label=\"Początek\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6}>\r\n                    <DateTimePicker\r\n                      name=\"departureDate\"\r\n                      label=\"Zakończenie\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Textfield\r\n                      name=\"message\"\r\n                      label=\"Dodatkowa wiadomość\"\r\n                      multiline={true}\r\n                      rows={4}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Checkbox\r\n                      name=\"termsOfService\"\r\n                      legend=\"Regulamin przetwarzania danych osobowych.\"\r\n                      label=\"Wyrażam zgodę na przetwarzanie swoich danych osobowych.\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <Button>\r\n                      Wyślij zamówienie\r\n                    </Button>\r\n                  </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n              </Form>\r\n            </Formik>\r\n\r\n          </div>\r\n        </Container>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ContactForm;"],"sourceRoot":""}